{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { useDispatch } from \"react-redux\";\n// import { GoogleLogin } from \"react-google-login\";\n// import * as actions from \"../../redux/actions\";\n// import { Redirect, useHistory } from \"react-router-dom\";\n// import axios from \"axios\";\n\n// const Login = (props) => {\n//   const item = props.location.state;\n//   const dispatch = useDispatch();\n//   const [errors, setErrors] = useState({});\n//   const history = useHistory();\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [formData, setFormData] = useState({\n//     email: \"\",\n//     password: \"\",\n//   });\n//   const handleChange = (e) => {\n//     setFormData({\n//       ...formData,\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n\n//   const onSuccess = (res) => {\n//     console.log(\"onSuccess\", res);\n\n//     sessionStorage.setItem(\"userdetails\", JSON.stringify(res.user));\n//     dispatch(actions.login(res.user));\n//     setIsLoggedIn(true);\n//   };\n//   const validateForm = () => {\n//     const newErrors = {};\n\n//     // Basic email validation\n//     if (!formData.email || !formData.email.includes(\"@\")) {\n//       newErrors.email = \"Invalid email address\";\n//     }\n\n//     // Basic password validation\n//     if (!formData.password || formData.password.length < 6) {\n//       newErrors.password = \"Password must be at least 6 characters\";\n//     }\n\n//     setErrors(newErrors);\n\n//     // Return true if there are no errors\n//     return Object.keys(newErrors).length === 0;\n//   };\n//   const handleLogin = () => {\n//     if (validateForm()) {\n//       // Dispatch signup action or API call here\n//       // Example: dispatch(actions.signup(formData));\n//       axios({\n//         url: \"http://localhost:5000/auth/api/login\",\n//         method: \"post\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         data: {\n//           ...formData,\n//         },\n//       })\n//         .then((res) => {\n//           console.log(\"res \", res);\n//           if (res.status === 200 || res.status === 201) {\n//             onSuccess(res.data);\n//             history.push(\"/product\");\n//           }\n//         })\n//         .catch((err) => {\n//           console.log(err);\n//         });\n//       // Set isLoggedIn to true upon successful signup\n//       // setIsLoggedIn(true);\n//     }\n//   };\n//   return (\n//     <div>\n//       {isLoggedIn && item?.redirectto && <Redirect to={item.redirectto} />}\n//       <div className=\"d-flex justify-content-center align-items-center\">\n//         <div className=\"card col-lg-4 col-md-6 col-sm-12\">\n//           <div className=\"card-body\">\n//             <h5 className=\"card-title\">Login</h5>\n//             <div className=\"dropdown-divider\"></div>\n//             <div className=\"form-group\">\n//               <label>email</label>\n//               <input\n//                 name=\"email\"\n//                 type=\"email\"\n//                 className=\"form-control\"\n//                 onChange={handleChange}\n//               />\n//             </div>\n//             <div className=\"form-group\">\n//               <label>Password</label>\n//               <input\n//                 name=\"password\"\n//                 type=\"password\"\n//                 className=\"form-control\"\n//                 onChange={handleChange}\n//               />\n//             </div>\n//             {errors.length > 0 && (\n//               <div className=\"text-danger\">{errors.confirmPassword}</div>\n//             )}{\" \"}\n//             <div\n//               className=\"btn btn-success btn-block\"\n//               onClick={handleLogin}\n//             >{`LOGIN`}</div>\n//             <div className=\"dropdown-divider\">OR</div>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Login;","map":{"version":3,"names":[],"sources":["C:/Users/Dell/Desktop/ECommerce/estore/src/components/Login/index.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { useDispatch } from \"react-redux\";\r\n// import { GoogleLogin } from \"react-google-login\";\r\n// import * as actions from \"../../redux/actions\";\r\n// import { Redirect, useHistory } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n\r\n// const Login = (props) => {\r\n//   const item = props.location.state;\r\n//   const dispatch = useDispatch();\r\n//   const [errors, setErrors] = useState({});\r\n//   const history = useHistory();\r\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n//   const [formData, setFormData] = useState({\r\n//     email: \"\",\r\n//     password: \"\",\r\n//   });\r\n//   const handleChange = (e) => {\r\n//     setFormData({\r\n//       ...formData,\r\n//       [e.target.name]: e.target.value,\r\n//     });\r\n//   };\r\n\r\n//   const onSuccess = (res) => {\r\n//     console.log(\"onSuccess\", res);\r\n\r\n//     sessionStorage.setItem(\"userdetails\", JSON.stringify(res.user));\r\n//     dispatch(actions.login(res.user));\r\n//     setIsLoggedIn(true);\r\n//   };\r\n//   const validateForm = () => {\r\n//     const newErrors = {};\r\n\r\n//     // Basic email validation\r\n//     if (!formData.email || !formData.email.includes(\"@\")) {\r\n//       newErrors.email = \"Invalid email address\";\r\n//     }\r\n\r\n//     // Basic password validation\r\n//     if (!formData.password || formData.password.length < 6) {\r\n//       newErrors.password = \"Password must be at least 6 characters\";\r\n//     }\r\n\r\n//     setErrors(newErrors);\r\n\r\n//     // Return true if there are no errors\r\n//     return Object.keys(newErrors).length === 0;\r\n//   };\r\n//   const handleLogin = () => {\r\n//     if (validateForm()) {\r\n//       // Dispatch signup action or API call here\r\n//       // Example: dispatch(actions.signup(formData));\r\n//       axios({\r\n//         url: \"http://localhost:5000/auth/api/login\",\r\n//         method: \"post\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         data: {\r\n//           ...formData,\r\n//         },\r\n//       })\r\n//         .then((res) => {\r\n//           console.log(\"res \", res);\r\n//           if (res.status === 200 || res.status === 201) {\r\n//             onSuccess(res.data);\r\n//             history.push(\"/product\");\r\n//           }\r\n//         })\r\n//         .catch((err) => {\r\n//           console.log(err);\r\n//         });\r\n//       // Set isLoggedIn to true upon successful signup\r\n//       // setIsLoggedIn(true);\r\n//     }\r\n//   };\r\n//   return (\r\n//     <div>\r\n//       {isLoggedIn && item?.redirectto && <Redirect to={item.redirectto} />}\r\n//       <div className=\"d-flex justify-content-center align-items-center\">\r\n//         <div className=\"card col-lg-4 col-md-6 col-sm-12\">\r\n//           <div className=\"card-body\">\r\n//             <h5 className=\"card-title\">Login</h5>\r\n//             <div className=\"dropdown-divider\"></div>\r\n//             <div className=\"form-group\">\r\n//               <label>email</label>\r\n//               <input\r\n//                 name=\"email\"\r\n//                 type=\"email\"\r\n//                 className=\"form-control\"\r\n//                 onChange={handleChange}\r\n//               />\r\n//             </div>\r\n//             <div className=\"form-group\">\r\n//               <label>Password</label>\r\n//               <input\r\n//                 name=\"password\"\r\n//                 type=\"password\"\r\n//                 className=\"form-control\"\r\n//                 onChange={handleChange}\r\n//               />\r\n//             </div>\r\n//             {errors.length > 0 && (\r\n//               <div className=\"text-danger\">{errors.confirmPassword}</div>\r\n//             )}{\" \"}\r\n//             <div\r\n//               className=\"btn btn-success btn-block\"\r\n//               onClick={handleLogin}\r\n//             >{`LOGIN`}</div>\r\n//             <div className=\"dropdown-divider\">OR</div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\n"],"mappings},"metadata":{},"sourceType":"module"}