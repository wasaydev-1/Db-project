{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { useDispatch } from \"react-redux\";\n// import { GoogleLogin } from \"react-google-login\";\n// import * as actions from \"../../redux/actions\";\n// import { Redirect, useHistory } from \"react-router-dom\";\n// import axios from \"axios\";\n\n// const Signup = (props) => {\n//   const item = props.location.state;\n//   const dispatch = useDispatch();\n//   const history = useHistory();\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [formData, setFormData] = useState({\n//     username: \"\",\n//     password: \"\",\n//     confirmPassword: \"\",\n//     email: \"\",\n//   });\n//   const [errors, setErrors] = useState({});\n\n//   const handleInputChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const validateForm = () => {\n//     const newErrors = {};\n\n//     // Basic email validation\n//     if (!formData.email || !formData.email.includes(\"@\")) {\n//       newErrors.email = \"Invalid email address\";\n//     }\n\n//     // Basic password validation\n//     if (!formData.password || formData.password.length < 6) {\n//       newErrors.password = \"Password must be at least 6 characters\";\n//     }\n\n//     // Confirm password validation\n//     if (formData.password !== formData.confirmPassword) {\n//       newErrors.confirmPassword = \"Passwords do not match\";\n//     }\n\n//     setErrors(newErrors);\n\n//     // Return true if there are no errors\n//     return Object.keys(newErrors).length === 0;\n//   };\n\n//   const handleSignup = () => {\n//     if (validateForm()) {\n//       // Dispatch signup action or API call here\n//       // Example: dispatch(actions.signup(formData));\n//       axios({\n//         url: \"http://localhost:5000/auth/api/signup\",\n//         method: \"post\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         data: {\n//           ...formData,\n//         },\n//       })\n//         .then((res) => {\n//           console.log(\"res \", res);\n//           if (res.status === 200 || res.status === 201) {\n//             history.push(\"/login\");\n//           }\n//         })\n//         .catch((err) => {\n//           console.log(err);\n//         });\n//       // Set isLoggedIn to true upon successful signup\n//       // setIsLoggedIn(true);\n//     }\n//   };\n\n//   const onSuccess = (res) => {\n//     console.log(\"onSuccess\", res);\n//     // Handle Google login success if needed\n//   };\n\n//   return (\n//     <div>\n//       {isLoggedIn && item?.redirectto && <Redirect to={item.redirectto} />}\n//       <div className=\"d-flex justify-content-center align-items-center\">\n//         <div className=\"card col-lg-4 col-md-6 col-sm-12\">\n//           <div className=\"card-body\">\n//             <h5 className=\"card-title\">Signup</h5>\n//             <div className=\"dropdown-divider\"></div>\n//             <div className=\"form-group\">\n//               <label>Username</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"username\"\n//                 value={formData.username}\n//                 onChange={handleInputChange}\n//                 className=\"form-control\"\n//               />\n//             </div>\n//             <div className=\"form-group\">\n//               <label>Password</label>\n//               <input\n//                 type=\"password\"\n//                 name=\"password\"\n//                 value={formData.password}\n//                 onChange={handleInputChange}\n//                 className=\"form-control\"\n//               />\n//               {errors.password && (\n//                 <div className=\"text-danger\">{errors.password}</div>\n//               )}\n//             </div>\n//             <div className=\"form-group\">\n//               <label>Confirm password</label>\n//               <input\n//                 type=\"password\"\n//                 name=\"confirmPassword\"\n//                 value={formData.confirmPassword}\n//                 onChange={handleInputChange}\n//                 className=\"form-control\"\n//               />\n//               {errors.confirmPassword && (\n//                 <div className=\"text-danger\">{errors.confirmPassword}</div>\n//               )}\n//             </div>\n//             <div className=\"form-group\">\n//               <label>Email</label>\n//               <input\n//                 type=\"email\"\n//                 name=\"email\"\n//                 value={formData.email}\n//                 onChange={handleInputChange}\n//                 className=\"form-control\"\n//               />\n//               {errors.email && (\n//                 <div className=\"text-danger\">{errors.email}</div>\n//               )}\n//             </div>\n//             <div className=\"btn btn-success btn-block\" onClick={handleSignup}>\n//               {`Signup`}\n//             </div>\n//             <div className=\"dropdown-divider\">OR</div>\n//             <GoogleLogin\n//               clientId={\n//                 \"941695139278-l2ae3g0jmg7do2p1a4gicn8vk17j55ij.apps.googleusercontent.com\"\n//               }\n//               buttonText=\"Login with Google\"\n//               onSuccess={onSuccess}\n//               className=\"btn-block\"\n//               theme=\"dark\"\n//             />\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Signup;","map":{"version":3,"names":[],"sources":["C:/Users/Dell/Desktop/ECommerce/estore/src/components/Login/signup.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { useDispatch } from \"react-redux\";\r\n// import { GoogleLogin } from \"react-google-login\";\r\n// import * as actions from \"../../redux/actions\";\r\n// import { Redirect, useHistory } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n\r\n// const Signup = (props) => {\r\n//   const item = props.location.state;\r\n//   const dispatch = useDispatch();\r\n//   const history = useHistory();\r\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n//   const [formData, setFormData] = useState({\r\n//     username: \"\",\r\n//     password: \"\",\r\n//     confirmPassword: \"\",\r\n//     email: \"\",\r\n//   });\r\n//   const [errors, setErrors] = useState({});\r\n\r\n//   const handleInputChange = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const validateForm = () => {\r\n//     const newErrors = {};\r\n\r\n//     // Basic email validation\r\n//     if (!formData.email || !formData.email.includes(\"@\")) {\r\n//       newErrors.email = \"Invalid email address\";\r\n//     }\r\n\r\n//     // Basic password validation\r\n//     if (!formData.password || formData.password.length < 6) {\r\n//       newErrors.password = \"Password must be at least 6 characters\";\r\n//     }\r\n\r\n//     // Confirm password validation\r\n//     if (formData.password !== formData.confirmPassword) {\r\n//       newErrors.confirmPassword = \"Passwords do not match\";\r\n//     }\r\n\r\n//     setErrors(newErrors);\r\n\r\n//     // Return true if there are no errors\r\n//     return Object.keys(newErrors).length === 0;\r\n//   };\r\n\r\n//   const handleSignup = () => {\r\n//     if (validateForm()) {\r\n//       // Dispatch signup action or API call here\r\n//       // Example: dispatch(actions.signup(formData));\r\n//       axios({\r\n//         url: \"http://localhost:5000/auth/api/signup\",\r\n//         method: \"post\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         data: {\r\n//           ...formData,\r\n//         },\r\n//       })\r\n//         .then((res) => {\r\n//           console.log(\"res \", res);\r\n//           if (res.status === 200 || res.status === 201) {\r\n//             history.push(\"/login\");\r\n//           }\r\n//         })\r\n//         .catch((err) => {\r\n//           console.log(err);\r\n//         });\r\n//       // Set isLoggedIn to true upon successful signup\r\n//       // setIsLoggedIn(true);\r\n//     }\r\n//   };\r\n\r\n//   const onSuccess = (res) => {\r\n//     console.log(\"onSuccess\", res);\r\n//     // Handle Google login success if needed\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       {isLoggedIn && item?.redirectto && <Redirect to={item.redirectto} />}\r\n//       <div className=\"d-flex justify-content-center align-items-center\">\r\n//         <div className=\"card col-lg-4 col-md-6 col-sm-12\">\r\n//           <div className=\"card-body\">\r\n//             <h5 className=\"card-title\">Signup</h5>\r\n//             <div className=\"dropdown-divider\"></div>\r\n//             <div className=\"form-group\">\r\n//               <label>Username</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"username\"\r\n//                 value={formData.username}\r\n//                 onChange={handleInputChange}\r\n//                 className=\"form-control\"\r\n//               />\r\n//             </div>\r\n//             <div className=\"form-group\">\r\n//               <label>Password</label>\r\n//               <input\r\n//                 type=\"password\"\r\n//                 name=\"password\"\r\n//                 value={formData.password}\r\n//                 onChange={handleInputChange}\r\n//                 className=\"form-control\"\r\n//               />\r\n//               {errors.password && (\r\n//                 <div className=\"text-danger\">{errors.password}</div>\r\n//               )}\r\n//             </div>\r\n//             <div className=\"form-group\">\r\n//               <label>Confirm password</label>\r\n//               <input\r\n//                 type=\"password\"\r\n//                 name=\"confirmPassword\"\r\n//                 value={formData.confirmPassword}\r\n//                 onChange={handleInputChange}\r\n//                 className=\"form-control\"\r\n//               />\r\n//               {errors.confirmPassword && (\r\n//                 <div className=\"text-danger\">{errors.confirmPassword}</div>\r\n//               )}\r\n//             </div>\r\n//             <div className=\"form-group\">\r\n//               <label>Email</label>\r\n//               <input\r\n//                 type=\"email\"\r\n//                 name=\"email\"\r\n//                 value={formData.email}\r\n//                 onChange={handleInputChange}\r\n//                 className=\"form-control\"\r\n//               />\r\n//               {errors.email && (\r\n//                 <div className=\"text-danger\">{errors.email}</div>\r\n//               )}\r\n//             </div>\r\n//             <div className=\"btn btn-success btn-block\" onClick={handleSignup}>\r\n//               {`Signup`}\r\n//             </div>\r\n//             <div className=\"dropdown-divider\">OR</div>\r\n//             <GoogleLogin\r\n//               clientId={\r\n//                 \"941695139278-l2ae3g0jmg7do2p1a4gicn8vk17j55ij.apps.googleusercontent.com\"\r\n//               }\r\n//               buttonText=\"Login with Google\"\r\n//               onSuccess={onSuccess}\r\n//               className=\"btn-block\"\r\n//               theme=\"dark\"\r\n//             />\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Signup;\r\n"],"mappings},"metadata":{},"sourceType":"module"}